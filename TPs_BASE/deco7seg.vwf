/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 400000000.0;
	SIMULATION_TIME = 400000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("E")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("E[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "E";
}

SIGNAL("E[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "E";
}

SIGNAL("E[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "E";
}

SIGNAL("E[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "E";
}

SIGNAL("seg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("seg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("divider 2760")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("E[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400000000.0;
	}
}

TRANSITION_LIST("E[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 79.0;
		LEVEL 1 FOR 20.8;
		LEVEL 0 FOR 399999900.2;
	}
}

TRANSITION_LIST("E[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.8;
		LEVEL 1 FOR 39.6;
		LEVEL 0 FOR 337.8;
		LEVEL 1 FOR 34.6;
		LEVEL 0 FOR 399999548.2;
	}
}

TRANSITION_LIST("E[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.6;
		LEVEL 1 FOR 19.4;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 23.0;
		LEVEL 0 FOR 320.8;
		LEVEL 1 FOR 16.4;
		LEVEL 0 FOR 18.2;
		LEVEL 1 FOR 16.6;
		LEVEL 0 FOR 399999548.2;
	}
}

TRANSITION_LIST("seg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.6;
		LEVEL 0 FOR 19.2;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 300.8;
		LEVEL 0 FOR 16.4;
		LEVEL 1 FOR 399999583.0;
	}
}

TRANSITION_LIST("seg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 79.4;
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 399999920.2;
	}
}

TRANSITION_LIST("seg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 360.4;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 399999564.8;
	}
}

TRANSITION_LIST("seg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.6;
		LEVEL 0 FOR 19.2;
		LEVEL 1 FOR 39.2;
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 300.8;
		LEVEL 0 FOR 16.4;
		LEVEL 1 FOR 399999583.0;
	}
}

TRANSITION_LIST("seg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.6;
		LEVEL 0 FOR 19.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 43.0;
		LEVEL 1 FOR 300.8;
		LEVEL 0 FOR 16.4;
		LEVEL 1 FOR 18.2;
		LEVEL 0 FOR 16.6;
		LEVEL 1 FOR 399999548.2;
	}
}

TRANSITION_LIST("seg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.6;
		LEVEL 0 FOR 58.8;
		LEVEL 1 FOR 321.2;
		LEVEL 0 FOR 16.4;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 34.6;
		LEVEL 1 FOR 399999548.2;
	}
}

TRANSITION_LIST("seg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.8;
		LEVEL 1 FOR 39.2;
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 20.4;
		LEVEL 0 FOR 317.4;
		LEVEL 1 FOR 34.6;
		LEVEL 0 FOR 399999548.2;
	}
}

DISPLAY_LINE
{
	CHANNEL = "E";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "E[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "E[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "E[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "E[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 2760";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "seg";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "seg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "seg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "seg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "seg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "seg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "seg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "seg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

TIME_BAR
{
	TIME = 23600;
	MASTER = TRUE;
}
;
